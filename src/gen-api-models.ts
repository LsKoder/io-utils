// tslint:disable:no-console

import yargs = require("yargs");
import * as fs from "fs-extra";
import * as nunjucks from "nunjucks";
import * as prettier from "prettier";
import * as SwaggerParser from "swagger-parser";
import { Spec } from "swagger-schema-official";

async function generateApi(
  e: nunjucks.Environment,
  specFilePath: string,
  definitionsDirPath: string,
  tsSpecFilePath: string | undefined
): Promise<void> {
  const api: Spec = await SwaggerParser.bundle(specFilePath);

  const specCode = `
    /* tslint:disable:object-literal-sort-keys */
    /* tslint:disable:no-duplicate-string */

    // DO NOT EDIT
    // auto-generated by generated_model.ts from ${specFilePath}

    export const specs = ${JSON.stringify(api)};
  `;
  if(tsSpecFilePath) {
    console.log(`Writing TS Specs to ${tsSpecFilePath}`);
    await fs.writeFile(
      tsSpecFilePath,
      prettier.format(specCode, {
        parser: "typescript"
      })
    );
  }

  const definitions = api.definitions;
  if (!definitions) {
    console.log("No definitions found, skipping generation of model code.");
    return;
  }

  for (const definitionName in definitions) {
    if (definitions.hasOwnProperty(definitionName)) {
      const definition = definitions[definitionName];
      const outPath = `${definitionsDirPath}/${definitionName}.ts`;
      console.log(`${definitionName} -> ${outPath}`);
      const code = e.render("model.ts.njk", {
        definition,
        definitionName
      });
      const prettifiedCode = prettier.format(code, {
        parser: "typescript"
      });
      await fs.writeFile(
        outPath,
        prettifiedCode
      );
    }
  }
}

//
// parse command line
//

interface Argv {
  help?: boolean
  version?: boolean,
  specFile?: string,
  outDir?: string,
  tsSpecFile?: string
};

const argv = yargs
  .option("api-spec", {
    demandOption: true,
    string: true,
    normalize: true,
    description: "Path to input OpenAPI spec file"
  })
  .option("out-dir", {
    demandOption: true,
    string: true,
    normalize: true,
    description: "Output directory to store generated definition files"
  })
  .option("ts-spec-file", {
    string: true,
    normalize: true,
    description: "If defined, converts the OpenAPI specs to TypeScript source and writes it to this file"
  })
  .help().argv;

//
// Configure nunjucks
//

nunjucks.configure({
  trimBlocks: true
});

const env = new nunjucks.Environment(
  new nunjucks.FileSystemLoader(`${__dirname}/../templates`)
);
env.addFilter("contains", <T>(a: ReadonlyArray<T>, item: T) => {
  return a.indexOf(item) !== -1;
});

//
// Generate APIs
//

generateApi(env, argv["api-spec"], argv["out-dir"], argv["ts-spec-file"]).then(
  () => console.log("done"),
  err => console.log(`Error: ${err}`)
);
