ProblemJson:
  type: object
  properties:
    type:
      type: string
      format: uri
      description: |-
        An absolute URI that identifies the problem type. When dereferenced,
        it SHOULD provide human-readable documentation for the problem type
        (e.g., using HTML).
      default: about:blank
      example: https://example.com/problem/constraint-violation
    title:
      type: string
      description: |-
        A short, summary of the problem type. Written in english and readable
        for engineers (usually not suited for non technical stakeholders and
        not localized); example: Service Unavailable
    status:
      $ref: "#/HttpStatusCode"
    detail:
      type: string
      description: |-
        A human readable explanation specific to this occurrence of the
        problem.
      example: There was an error processing the request
    instance:
      type: string
      format: uri
      description: |-
        An absolute URI that identifies the specific occurrence of the problem.
        It may or may not yield further information if dereferenced.
MessageResponseWithContent:
  type: object
  properties:
    message:
      $ref: "#/CreatedMessageWithContent"
    notification:
      $ref: "#/MessageResponseNotificationStatus"
    status:
      $ref: "#/MessageStatusValue"
  required:
    - message
CreatedMessageWithContent:
  type: object
  properties:
    id:
      type: string
    fiscal_code:
      $ref: "#/FiscalCode"
    time_to_live:
      $ref: "#/TimeToLiveSeconds"
    created_at:
      Timestamp:
        type: string
        format: UTCISODateFromString
        description: A date-time field in ISO-8601 format and UTC timezone.
        x-import: italia-ts-commons/lib/dates
        example: "2018-10-13T00:00:00.000Z"
    content:
      $ref: "#/MessageContent"
    sender_service_id:
      type: string
  required:
    - id
    - fiscal_code
    - created_at
    - content
    - sender_service_id
MessageResponseNotificationStatus:
  type: object
  properties:
    email:
      $ref: "#/NotificationChannelStatusValue"
MessageStatusValue:
  type: string
  description: |-
    The processing status of a message.
    "ACCEPTED": the message has been accepted and will be processed for delivery;
      we'll try to store its content in the user's inbox and notify him on his preferred channels
    "THROTTLED": a temporary failure caused a retry during the message processing;
      any notification associated with this message will be delayed for a maximum of 7 days
    "FAILED": a permanent failure caused the process to exit with an error, no notification will be sent for this message
    "PROCESSED": the message was succesfully processed and is now stored in the user's inbox;
      we'll try to send a notification for each of the selected channels
    "REJECTED": either the recipient does not exist, or the sender has been blocked
  x-extensible-enum:
    - ACCEPTED
    - THROTTLED
    - FAILED
    - PROCESSED
    - REJECTED
  example: ACCEPTED
HttpStatusCode:
  type: integer
  format: int32
  description: |-
    The HTTP status code generated by the origin server for this occurrence
    of the problem.
  minimum: 100
  maximum: 600
  exclusiveMaximum: true
  example: 200
FiscalCode:
  type: string
  description: User's fiscal code.
  format: FiscalCode
  x-import: italia-ts-commons/lib/strings
  example: SPNDNL80R13C555X
TimeToLiveSeconds:
  type: integer
  default: 3600
  minimum: 3600
  maximum: 604800
  description: |-
    This parameter specifies for how long (in seconds) the system will
    try to deliver the message to the channels configured by the user.
  example: 3600
Timestamp:
  type: string
  format: UTCISODateFromString
  description: A date-time field in ISO-8601 format and UTC timezone.
  x-import: italia-ts-commons/lib/dates
  example: "2018-10-13T00:00:00.000Z"
MessageContent:
  type: object
  properties:
    subject:
      $ref: "#/MessageSubject"
    markdown:
      $ref: "#/MessageBodyMarkdown"
    payment_data:
      $ref: "#/PaymentData"
    due_date:
      $ref: "#/Timestamp"
  required:
    - subject
    - markdown
NotificationChannelStatusValue:
  type: string
  description: |-
    The status of a notification (one for each channel).
    "SENT": the notification was succesfully sent to the channel (ie. email or push notification)
    "THROTTLED": a temporary failure caused a retry during the notification processing;
      the notification associated with this channel will be delayed for a maximum of 7 days or until the message expires
    "EXPIRED": the message expired before the notification could be sent;
      this means that the maximum message time to live was reached; no notification will be sent to this channel
    "FAILED": a permanent failure caused the process to exit with an error, no notification will be sent to this channel
  x-extensible-enum:
    - SENT
    - THROTTLED
    - EXPIRED
    - FAILED
  example: SENT
MessageSubject:
  type: string
  description: |-
    The (optional) subject of the message - note that only some notification
    channels support the display of a subject. When a subject is not provided,
    one gets generated from the client attributes.
  minLength: 10
  maxLength: 120
  example: Welcome new user !
MessageBodyMarkdown:
  type: string
  description: |-
    The full version of the message, in plain text or Markdown format. The
    content of this field will be delivered to channels that don't have any
    limit in terms of content size (e.g. email, etc...).
  minLength: 80
  maxLength: 10000
  example: |-
    # This is a markdown header

    to show how easily markdown can be converted to **HTML**

    Remember: this has to be a long text.
PaymentData:
  type: object
  description: |-
    Metadata needed to process pagoPA payments.
  properties:
    amount:
      $ref: "#/PaymentAmount"
    notice_number:
      $ref: "#/PaymentNoticeNumber"
    invalid_after_due_date:
      type: boolean
      default: false
  required:
    - amount
    - notice_number
PaymentNoticeNumber:
  description: The field ["Numero Avviso"](https://pagopa-specifichepagamenti.readthedocs.io/it/latest/_docs/Capitolo7.html#il-numero-avviso-e-larchivio-dei-pagamenti-in-attesa)
    of pagoPa, needed to identify the payment. Format is `<aux digit (1n)>[<application code> (2n)]<codice IUV (15|17n)>`.
    See [pagoPa specs](https://www.agid.gov.it/sites/default/files/repository_files/specifiche_attuative_pagamenti_1_3_1_0.pdf) for more info on this field and the IUV.
  type: string
  pattern: "^[0123][0-9]{17}$"
PaymentAmount:
  description: |-
    Amount of payment in euro cent. PagoPA accepts up to 999999999 euro cents.
  type: integer
  minimum: 1
  maximum: 9999999999